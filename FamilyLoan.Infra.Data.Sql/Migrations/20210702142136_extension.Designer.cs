// <auto-generated />
using System;
using FamilyLoan.Infra.Data.Sql.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FamilyLoan.Infra.Data.Sql.Migrations
{
    [DbContext(typeof(FamilyLoanDbContext))]
    [Migration("20210702142136_extension")]
    partial class extension
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("FamilyLoan")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatededDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<int?>("personID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("personID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.Bank", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AmountDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatededDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.Loan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatededDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FirstInstallmentDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Installment")
                        .HasColumnType("float");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastInstallmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<byte>("PersonLoanNo")
                        .HasColumnType("tinyint");

                    b.Property<double>("TotalLoanAmount")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("PersonID")
                        .IsUnique();

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.LoanItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatededDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("InstallmentAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("InstallmentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("bit");

                    b.Property<int>("LoanID")
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LoanID");

                    b.ToTable("LoanItems");
                });

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountIDNo")
                        .HasColumnType("int");

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatededDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileImage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("ID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.Profit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatededDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<double>("ProfitAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("ProfitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Profits");
                });

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.Account", b =>
                {
                    b.HasOne("FamilyLoan.Domain.Core.Entities.Person", "person")
                        .WithMany("Account")
                        .HasForeignKey("personID");

                    b.Navigation("person");
                });

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.Loan", b =>
                {
                    b.HasOne("FamilyLoan.Domain.Core.Entities.Person", null)
                        .WithOne("loan")
                        .HasForeignKey("FamilyLoan.Domain.Core.Entities.Loan", "PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.LoanItem", b =>
                {
                    b.HasOne("FamilyLoan.Domain.Core.Entities.Loan", "Loan")
                        .WithMany("LoanItems")
                        .HasForeignKey("LoanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.Loan", b =>
                {
                    b.Navigation("LoanItems");
                });

            modelBuilder.Entity("FamilyLoan.Domain.Core.Entities.Person", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("loan");
                });
#pragma warning restore 612, 618
        }
    }
}
